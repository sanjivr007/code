package dynamicprogramming;

public class LSumCSubarray {
	// find largest contigious subarray of maximum sum
	//[-2,-3,4,-1,-2,1,5,-3]
	public static void main(String[] args){
		
		int[] data = {-2,-3,4,-1,-2,1,5,-3};
		int max_till_now=-100;
		int max_now=0;
		for(int i=0;i<data.length;i++){
			max_now=max_now+data[i];
			if(max_till_now<max_now)
				max_till_now=max_now;
			System.out.println("max_till_now"+max_till_now);
			System.out.println("max_now"+max_now);
			if (max_ending_here < 0)
	            max_ending_here = 0;
							
		}
		System.out.println(max_till_now);	
	}

	public static int max(int a,int b){
		return a>b?a:b;
		
	}
}